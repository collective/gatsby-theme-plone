{"version":3,"sources":["../../src/db/index.js"],"names":["_","require","redux","emitter","dbs","process","env","GATSBY_DB_NODES","push","saveState","db","saveStateDebounced","debounce","startAutosave","bootstrapFinished","gatsby_executing_command","on","module","exports"],"mappings":";;AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAE,QAAF,CAAjB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAE,UAAF,CAArB;;MACQE,O,GAAYD,K,CAAZC,O,EAER;AACA;;AACA,MAAMC,GAAG,GAAG,CAACF,KAAD,CAAZ;;AACA,IAAIG,OAAO,CAACC,GAAR,CAAYC,eAAZ,KAAiC,MAArC,EAA4C;AAC1CH,EAAAA,GAAG,CAACI,IAAJ,CAASP,OAAO,CAAE,QAAF,CAAhB;AACD,C,CAED;;;AACA,SAASQ,SAAT,GAAqB;AACnB,wBAAiBL,GAAjB,eAAsB;AAAjB,UAAMM,EAAE,GAAIN,GAAJ,IAAR;AACHM,IAAAA,EAAE,CAACD,SAAH;AACD;AACF;;AACD,MAAME,kBAAkB,GAAGX,CAAC,CAACY,QAAF,CAAWH,SAAX,EAAsB,IAAtB,CAA3B;AAEA;;;;;;;AAKA,SAASI,aAAT,GAAyB;AACvB;AACA,MAAIC,iBAAiB,GAAG,KAAxB;;AACA,MAAIT,OAAO,CAACC,GAAR,CAAYS,wBAAZ,KAA0C,SAA9C,EAAwD;AACtDZ,IAAAA,OAAO,CAACa,EAAR,CAAY,oBAAZ,EAAiC,MAAM;AACrCF,MAAAA,iBAAiB,GAAG,IAApB;AACAL,MAAAA,SAAS;AACV,KAHD;AAIAN,IAAAA,OAAO,CAACa,EAAR,CAAY,GAAZ,EAAgB,MAAM;AACpB,UAAIF,iBAAJ,EAAuB;AACrBH,QAAAA,kBAAkB;AACnB;AACF,KAJD;AAKD,GAbsB,CAevB;;;AACA,MAAIN,OAAO,CAACC,GAAR,CAAYS,wBAAZ,KAA0C,OAA9C,EAAsD;AACpDZ,IAAAA,OAAO,CAACa,EAAR,CAAY,oBAAZ,EAAiC,MAAM;AACrCP,MAAAA,SAAS;AACV,KAFD;AAGD;AACF;;AAEDQ,MAAM,CAACC,OAAP,GAAiB;AACfL,EAAAA;AADe,CAAjB","sourcesContent":["const _ = require(`lodash`)\nconst redux = require(`../redux`)\nconst { emitter } = redux\n\n// Even if we are using loki, we still include redux in the list of\n// dbs since it still has pages, config, etc.\nconst dbs = [redux]\nif (process.env.GATSBY_DB_NODES === `loki`) {\n  dbs.push(require(`./loki`))\n}\n\n// calls `saveState()` on all DBs\nfunction saveState() {\n  for (const db of dbs) {\n    db.saveState()\n  }\n}\nconst saveStateDebounced = _.debounce(saveState, 1000)\n\n/**\n * Sets up listeners so that once bootstrap has finished, all\n * databases save their state to disk. If we're in `develop` mode,\n * then any new event triggers a debounced save as well.\n */\nfunction startAutosave() {\n  // During development, once bootstrap is finished, persist state on changes.\n  let bootstrapFinished = false\n  if (process.env.gatsby_executing_command === `develop`) {\n    emitter.on(`BOOTSTRAP_FINISHED`, () => {\n      bootstrapFinished = true\n      saveState()\n    })\n    emitter.on(`*`, () => {\n      if (bootstrapFinished) {\n        saveStateDebounced()\n      }\n    })\n  }\n\n  // During builds, persist state once bootstrap has finished.\n  if (process.env.gatsby_executing_command === `build`) {\n    emitter.on(`BOOTSTRAP_FINISHED`, () => {\n      saveState()\n    })\n  }\n}\n\nmodule.exports = {\n  startAutosave,\n}\n"],"file":"index.js"}